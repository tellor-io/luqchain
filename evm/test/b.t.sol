// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import "forge-std/console.sol";
import {Bridge} from "../src/Bridge.sol";
import {ReportCodec} from "../src/ReportCodec.sol";

contract BridgeTest is Test {
    Bridge public bridge;

    function setUp() public {
        Bridge.ValidatorWithPower[]
            memory vps = new Bridge.ValidatorWithPower[](1);
        vps[0] = Bridge.ValidatorWithPower(
            0x153Fe8246596E404f71Ca74199582BC6e41f1820,
            uint256(1000000)
        );
        bridge = new Bridge(vps, hex"32086C7571636861696E");
        assertEq(bridge.encodedChainID(), hex"32086C7571636861696E");
    }

    function testverifyOracleResult() public {
        ReportCodec.Report memory report = bridge.verifyOracleResult(
            hex"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000003e0178c0ad33a410b2cd1269ddb97d39623bcd152fb677612a82067ed7f6c1071307b52ac567c9631ce1a307a889e150e2ed3cf49c57f914bed13023806515409a4aa650406ea0d76e39dd43d2ea6a91e3fdaa1c908fc21a7ca68e5e62cc81156396029f6febd3970ad2d8ad2910215f2334202b7fdb2b8d7de18608c1bb2ef15237db4314551f2f9caf6cfc5199cb76af17fa549564237288ad30509204c4c0208f01658959b4555e1bf62ad7797861ff306dcdc22a2ae1cdfaaf2c42e71b4cf1430a56e8396af0bf8abfe2b36fbc3b9cce5d179f94bd63ec6c906ed9eed36067600000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000064fa011700000000000000000000000000000000000000000000000000000000085acb40fb80e212f5d79cccf2d005ccad89c1e1c0cf61a91b8f67c87e974930a16aac11f15d44d7e0f601f3682b801069dcee87f13a9ec759ffde9afcd6d556c56340119fb9c7533caf1d218da3af6d277f6b101c42e3c3b75d784242da663604dd53c2cbde3bdd621648fec25a3d8b1f977c487c47edac8f9d4b19a17b7d9ef88a938e000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f080211140000000000000022480a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026122408011220c70f3e188de2217fe4b9de7672c488c3b16172e03e79b13e1392439a9ee016290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000203d2fda1c89671c75915cdf439c45fda666947e6cf1107e22edb659b21d4b2b0c32072de5eddf4017fb63434c9730b9ba10a493a31d8b0ed0b2ddc5281f7be7ff000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b089882e8a7061088bc8051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000303e0000000000000000000000000000000000000000000000000000000064fa010a00000000000000000000000000000000000000000000000000000000000002ce0d42d370fd246b7d9c5e8f48d50611925308736ade342055926a4ac16fe18bc",
            hex"5265706F72742D76616C75652D537422E5383888586F8F9BCA62C5BFD8EB0F8C1BCD335B1A691E6B550C92DCCE0000000064FA010A"
        );
        assertEq(report.value, 12350);
    }

    function testrelayAndVerify() public {
        bridge.relayAndVerify(
            hex"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000003e0178c0ad33a410b2cd1269ddb97d39623bcd152fb677612a82067ed7f6c1071307b52ac567c9631ce1a307a889e150e2ed3cf49c57f914bed13023806515409a4aa650406ea0d76e39dd43d2ea6a91e3fdaa1c908fc21a7ca68e5e62cc81156396029f6febd3970ad2d8ad2910215f2334202b7fdb2b8d7de18608c1bb2ef15237db4314551f2f9caf6cfc5199cb76af17fa549564237288ad30509204c4c0208f01658959b4555e1bf62ad7797861ff306dcdc22a2ae1cdfaaf2c42e71b4cf1430a56e8396af0bf8abfe2b36fbc3b9cce5d179f94bd63ec6c906ed9eed36067600000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000064fa011700000000000000000000000000000000000000000000000000000000085acb40fb80e212f5d79cccf2d005ccad89c1e1c0cf61a91b8f67c87e974930a16aac11f15d44d7e0f601f3682b801069dcee87f13a9ec759ffde9afcd6d556c56340119fb9c7533caf1d218da3af6d277f6b101c42e3c3b75d784242da663604dd53c2cbde3bdd621648fec25a3d8b1f977c487c47edac8f9d4b19a17b7d9ef88a938e000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f080211140000000000000022480a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026122408011220c70f3e188de2217fe4b9de7672c488c3b16172e03e79b13e1392439a9ee016290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000203d2fda1c89671c75915cdf439c45fda666947e6cf1107e22edb659b21d4b2b0c32072de5eddf4017fb63434c9730b9ba10a493a31d8b0ed0b2ddc5281f7be7ff000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b089882e8a7061088bc8051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000303e0000000000000000000000000000000000000000000000000000000064fa010a00000000000000000000000000000000000000000000000000000000000002ce0d42d370fd246b7d9c5e8f48d50611925308736ade342055926a4ac16fe18bc",
            hex"5265706F72742D76616C75652D537422E5383888586F8F9BCA62C5BFD8EB0F8C1BCD335B1A691E6B550C92DCCE0000000064FA010A"
        );
        (bytes32 stateHash, uint64 timestamp, uint32 nanoSeconds) = bridge
            .blockDetails(20);
        assertEq(
            stateHash,
            0x178c0ad33a410b2cd1269ddb97d39623bcd152fb677612a82067ed7f6c107130
        );
        assertEq(timestamp, 1694105879);
        assertEq(nanoSeconds, 140168000);
    }
}
